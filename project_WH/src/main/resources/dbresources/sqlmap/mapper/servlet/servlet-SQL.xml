<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="servlet">

	<select id="sidonm" resultType="servletVo">
		SELECT DISTINCT sd_nm, sd_cd FROM public."Location_C1" 
		WHERE sd_nm is not null
		ORDER BY sd_nm
	</select>
	
	<select id="sgg" resultType="servletVo" parameterType="String">
		SELECT DISTINCT sgg_nm,sgg_cd FROM public."Location_C1" 
		WHERE sd_nm=#{sd } AND sgg_nm is not null
		ORDER BY sgg_nm
	</select>
	
	<select id="bjd" resultType="servletVo" parameterType="String">
		SELECT DISTINCT bjd_nm, bjd_cd FROM public."Location_C1" where left(bjd_cd,5) = #{sgg } ORDER BY bjd_nm
	</select>
	
	<select id="center" resultType="HashMap" parameterType="Map">
	select ST_AsGeoJSON(ST_EXTENT(geom), 9, 1) 
	<if test='type.equals("sd") ' >
		FROM public.tl_sd
	</if>
	<if test='type.equals("sgg") ' >
		FROM public.tl_sgg
	</if>
	<if test='type.equals("bjd") ' >
		FROM public.tl_bjd
	</if>
	<where>
		<if test='type.equals("sd") ' >
			sd_nm = #{filter}
		</if>
		<if test='type.equals("sgg") ' >
			sgg_nm = #{filter}
		</if>
		<if test='type.equals("bjd") ' >
			bjd_cd = #{filter}
		</if>
	</where>
	</select>
	
	<insert id="dbInsert" parameterType="map">
		INSERT INTO "TB_CARBON_C1" ("useDate","sggCD",bjd,usage) VALUES 
		<foreach collection="list" item="item" separator=",">
			(#{item.useDate}, #{item.sggCD},#{item.bjd},#{item.usage})
		</foreach>
	</insert>
	
	<select id="naLegend" resultType="String" parameterType="map">
		SELECT cdb_jenksbins(
			(SELECT ARRAY_AGG(usage) AS sum_array
			FROM (
				SELECT usage FROM 
				<if test='type.equals("sgg")'>
					c1_sgg 
				</if>
				<if test='type.equals("bjd")'>
					c1_bjd
				</if>
				<where>
					<if test='type.equals("sgg")'>
					sd_nm=#{filter}
					</if>
					<if test='type.equals("bjd")'>
					sgg_cd=#{filter}
					</if>
				</where>
				) AS subquery_alias), 5
			) as test
	</select>
	
	<select id="eqLegend" resultType="String" parameterType="map">
		WITH usage_ranges AS (
		    SELECT 
		        MIN(usage) AS min_usage,
		        MAX(usage) AS max_usage,
		        (MAX(usage) - MIN(usage)) / 5 AS range_size
		       	FROM
		    <if test='type.equals("sgg")'>
					c1_sgg 
			</if>
			<if test='type.equals("bjd")'>
					c1_bjd
			</if>
		   <where>
				<if test='type.equals("sgg")'>
					sd_nm=#{filter}
				</if>
				<if test='type.equals("bjd")'>
					sgg_cd=#{filter}
				</if>
			</where>
		)
		SELECT 
		    json_build_array(
			    CAST(min_usage + range_size AS BIGINT),
	    	    CAST(min_usage + range_size * 2 AS BIGINT),
		        CAST(min_usage + range_size * 3 AS BIGINT),
	    	    CAST(min_usage + range_size * 4 AS BIGINT),
		        CAST(max_usage AS BIGINT)
		    ) AS test
		FROM usage_ranges;
	</select>
	
	<delete id="trunc">
		truncate table "TB_CARBON_C1"
	</delete>
		
	<update id="refreshSd">
		REFRESH MATERIALIZED VIEW c1_sd
	</update>
	<update id="refreshSgg">
		REFRESH MATERIALIZED VIEW c1_sgg
	</update>
	<update id="refreshBjd">
		REFRESH MATERIALIZED VIEW c1_bjd
	</update>
	
</mapper>